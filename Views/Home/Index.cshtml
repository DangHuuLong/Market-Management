@model IEnumerable<PBL3_HK4.Entity.Product>
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Section: Banner giới thiệu sản phẩm tươi sống với nút kêu gọi hành động (CTA) -->
<div class="row p-lg-3">
    <div class="col-6" style="padding-left: 30px;">
        <p style="font-size: 42px; font-weight: bold;">Make healthy life with <span style="color: var(--green-color);">fresh</span> grocery</p>

        <p class="pb-2" style="max-width: 90%; line-height: 2;">
            Get the best quality and freshest grocery food, sourced directly from local farms.
            From organic vegetables to premium meat, we have everything you need for a healthy lifestyle.
            Order now and enjoy doorstep delivery with just a few clicks!
            Our commitment is to bring you farm-fresh ingredients that retain their natural taste and nutrients.
            We ensure strict quality control, so you receive only the best products every time.
            Join thousands of happy customers who trust us for their daily grocery needs.
        </p>

        <div class="d-flex gap-3">
            <a href="#product-container" class="btn rounded-pill flex-grow-1 py-2" style="background-color: var(--green-color); color: white; max-width: 33.33%;">
                Order Now
            </a>
            <button class="btn rounded-pill flex-grow-1 py-2" style="border: 1px solid; max-width: 33.33%;">
                Explore More <i class="bi bi-arrow-right"></i>
            </button>
        </div>
    </div>
    <div class="col-6 d-flex justify-content-center align-items-center" style="height: 100%;">
        <div id="groceryCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="2000">
                    <img src="~/img/hand&tomato.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 1">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/column2.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 2">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/MeatAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 3">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/CandyAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/MilkAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/BreadAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/EggAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/CakeAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 1">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/RiceAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 2">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/SugarAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 3">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/SpiceAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/IcecreamAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/TeaAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/CoffeeAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#groceryCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#groceryCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>



<!-- Service Highlights: Free Shipping, Returns, Secure Payment, Offers -->
<div class="row py-3 d-flex align-items-center justify-content-center" style="background-color: var(--brown-weak-color);">
    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/free-shipping.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">Free shipping</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">On all orders over $49.00</p>
        </div>
    </div>

    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/money.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">15 days returns</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">Moneyback guarantee</p>
        </div>
    </div>

    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/paypalcard.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">Secure checkout</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">Protected by Paypal</p>
        </div>
    </div>

    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/sale.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">Offer & gift here</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">On all orders over</p>
        </div>
    </div>
</div>

<!--Image-->
<div class="d-flex justify-content-evenly" style="margin-top: 20px; margin-bottom: 40px;">
    <!--Image Decoration-->
    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Fresh Fruit</p>
        <div style="border-radius: 50%; background-color: #FFB703; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #E63946;">
            <img src="../img/fruits.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Organic Vegetables</p>
        <div style="border-radius: 50%; background-color: #A7C957; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #6A994E; ">
            <img src="../img/vegetable.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Premium Meat</p>
        <div style="border-radius: 50%; background-color: #D62828; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #023047; ">
            <img src="../img/meat.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Bakery & Pastries</p>
        <div style="border-radius: 50%; background-color: #F6D6AD; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #D4A373; ">
            <img src="../img/bread.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Snacks & Sweets</p>
        <div style="border-radius: 50%; background-color: #FFBA08; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #9B2226; ">
            <img src="../img/candies.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Dairy & Beverages</p>
        <div style="border-radius: 50%; background-color: #F5F3F4; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #4895EF; ">
            <img src="../img/milk.png" width="70%" height="70%" />
        </div>
    </div>
</div>

<!-- Categories and Product -->
<div class="row">
    <!-- Categories -->
    <div class="col-3" style="padding-left: 30px; padding-right: 0;">
        <ul class="list-group" id="category-list">
            <li class="list-group-item category-header" style="background-color: #E6DACE; font-weight: bold; font-size: 18px;">
                <i class="bi bi-list"></i> CATEGORIES
            </li>
            @foreach (var category in new[] { "Vegetables", "Fresh Meat", "Fish and Seafood", "Butter and Cream", "Oil and Vinegar", "Breads", "Apple Juice", "Dry Nuts", "Frozen Foods", "Canned Foods", "Spices and Herbs", "Snacks and Chips", "Baby Food", "Coffee", "Tea", "Fruits" })
            {
                <li class="list-group-item d-flex align-items-center">
                    <img src="@Url.Content("~/img/" + category + ".png")" class="category-icon" />
                    <p class="m-0">@category</p>
                </li>
            }
        </ul>
    </div>

    <!-- List Product -->
    <div id="product-container" class="d-flex flex-wrap justify-content-start col-9">
        @if (Model != null && Model.Any())
        {
            <!-- Trường hợp không có sản phẩm sẽ hiển thị thông báo -->
        }
        else
        {
            <div class="alert alert-info col-12">No products available.</div>
        }
    </div>

    <!-- Pagination Controls -->
    <div class="col-9 offset-3 d-flex justify-content-center mt-4">
        <nav aria-label="Product pagination">
            <ul class="pagination" id="pagination-controls">
                <!-- Pagination buttons will be added dynamically -->
            </ul>
        </nav>
    </div>
</div>

<style>
    .carousel-inner {
        border-radius: 10px;
        overflow: hidden;
        height: 500px;
    }

    .carousel-item img {
        object-fit: cover;
        height: 500px;
        width: 100%;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 10%;
        background: none;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        filter: brightness(0) invert(1);
        width: 30px;
        height: 30px;
    }

    .pagination .page-link {
        color: #6D7B30;
        border-radius: 5px;
        margin: 0 5px;
        cursor: pointer;
    }

    .pagination .page-link:hover {
        background-color: #E6DACE;
        color: #314401;
    }

    .pagination .active .page-link {
        background-color: #6D7B30;
        color: white;
        border-color: #6D7B30;
    }

    .pagination .disabled .page-link {
        color: #ccc;
        pointer-events: none;
        cursor: default;
    }

    .category-icon {
        width: 24px;
        height: 24px;
        margin-right: 10px;
    }
</style>

@section Scripts {
    <style>
        /* Đảm bảo container chứa panel không làm ảnh hưởng bố cục */
        .card {
            position: relative;
            overflow: visible; /* Cho phép panel trồi ra ngoài */
        }

        /* Panel trồi ra */
        .hover-panel {
            position: absolute;
            top: 0;
            left: 0; /* Neo vào cạnh trái */
            width: 50px; /* Chiều rộng nhỏ gọn */
            height: 100%; /* Cao bằng thẻ card */
            background-color: #ffffff;
            box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1); /* Bóng ở bên phải */
            transform: translateX(-100%); /* Ẩn hoàn toàn bên trái */
            opacity: 0; /* Vô hình */
            transition: transform 0.3s ease, opacity 0.3s ease; /* Hiệu ứng mượt */
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 10px; /* Khoảng cách giữa các phần tử */
            z-index: 0; /* Nằm sau khi ẩn */
        }

        /* Trồi ra và hiện khi hover */
        .card:hover .hover-panel {
            transform: translateX(calc(-100% - 10px)); /* Trồi ra bên trái, cách 10px */
            opacity: 1; /* Hiện rõ */
            z-index: 10; /* Lên trên khi hover */
        }

        /* Nút giỏ hàng */
        .cart-btn {
            background-color: #E86D1F;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s, transform 0.2s; /* Transition cho phóng to */
            position: relative; /* Để định vị ảnh sản phẩm */
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .cart-btn:hover {
            background-color: #d65e1a;
        }

        /* Hiệu ứng phóng to nút giỏ hàng */
        .cart-btn-animating {
            transform: scale(1.5); /* Phóng to 50% */
        }

        /* Ảnh sản phẩm */
        .product-icon {
            position: absolute;
            width: 20px; /* Kích thước nhỏ để vừa panel */
            height: 20px;
            opacity: 0; /* Ẩn mặc định */
            transform: translateY(0); /* Ở vị trí ban đầu */
            transition: opacity 0.3s ease; /* Transition cho opacity */
            object-fit: cover; /* Đảm bảo ảnh không méo */
        }

        /* Hiệu ứng ảnh sản phẩm trồi lên rồi chui xuống */
        .product-icon-active {
            animation: productAnimation 0.6s ease-in-out; /* Animation 0.6s */
        }

        /* Keyframes cho ảnh sản phẩm */
        @@keyframes productAnimation {
            0% {
                opacity: 0;
                transform: translateY(0);
            }

            25% {
                opacity: 1;
                transform: translateY(-20px); /* Trồi lên 20px */
            }

            50% {
                opacity: 1;
                transform: translateY(-20px);
            }

            75% {
                opacity: 0;
                transform: translateY(0); /* Chui xuống */
            }

            100% {
                opacity: 0;
                transform: translateY(0);
            }
        }

        /* Thanh tăng giảm số lượng */
        .quantity-control {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
        }

        .quantity-btn {
            background-color: #80B500;
            color: white;
            border: none;
            border-radius: 5px;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s;
        }

        .quantity-btn:hover {
            background-color: #6a9300;
        }

        .quantity-input {
            width: 35px;
            text-align: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 2px;
            font-size: 14px;
        }

        /* Vô hiệu hóa mũi tên mặc định của input number */
        .quantity-input::-webkit-inner-spin-button,
        .quantity-input::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .quantity-input {
            -moz-appearance: textfield; /* Firefox */
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productsPerPage = 20; // Max products per page
            const cardsPerRow = 4; // Cards per row
            let currentPage = 1;

            // Get product container
            const productContainer = document.getElementById("product-container");
            const paginationControls = document.getElementById("pagination-controls");

            // Thêm dữ liệu sản phẩm thực từ model
            const products = [
                @if (Model != null && Model.Any())
                {
                    foreach (var product in Model)
                    {
                        <text>
                                        {
                                            id: "@product.ProductID",
                                            name: "@product.ProductName",
                                            description: "@(product.ProductDescription?.Replace("\n", "\\n").Replace("\"", "\\\""))",
                                            price: @product.Price,
                                            stock: @product.StockQuantity,
                                            categoryId: "@product.CatalogID",
                                            mfgDate: "@product.MFGDate.ToString("yyyy-MM-dd")",
                                            expDate: "@product.EXPDate.ToString("yyyy-MM-dd")",
                                            imageUrl: "../img/—Pngtree—red fresh tomato with green_8933861.png",
                                            averageStar: @product.AverageRating
                                        },
                        </text>
                    }
                }
            ];

            // Calculate margins
            const containerWidth = productContainer.offsetWidth;
            const cardWidth = 200; // Chiều rộng mỗi thẻ
            const totalCardWidth = cardWidth * cardsPerRow;
            const marginLeft = (containerWidth - totalCardWidth) / (cardsPerRow + 1);
            const marginBottom = marginLeft / 2;

            // Hiển thị sản phẩm với margin tính toán
            function displayProducts(page) {
                productContainer.innerHTML = '';
                const start = (page - 1) * productsPerPage;
                const end = Math.min(start + productsPerPage, products.length);
                const paginatedProducts = products.slice(start, end);

                paginatedProducts.forEach(product => {
                    // Tạo HTML hiển thị đánh giá sao
                    let starsHtml = '';
                    for (let i = 0; i < 5; i++) {
                        if (i < Math.floor(product.averageStar)) {
                            starsHtml += '<span style="color: #FFD700;">★</span>'; // Ngôi sao đầy
                        } else if (i < Math.ceil(product.averageStar) && i >= Math.floor(product.averageStar)) {
                            starsHtml += '<span style="color: #FFD700;">★</span>'; // Ngôi sao nửa - hiển thị đầy
                        } else {
                            starsHtml += '<span style="color: #C0C0C0;">★</span>'; // Ngôi sao rỗng
                        }
                    }

                const productHTML = `
                    <div class="card text-center" style="border-radius: 20px; max-width: 250px; height: 305px; margin-left: ${marginLeft}px; margin-bottom: ${marginBottom}px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
                        <img src="${product.imageUrl}"
                             style="background-color: #EDEDED; border-top-left-radius: 20px; border-top-right-radius: 20px; height: 200px; width: 100%; object-fit: cover;"
                             class="card-img-top" alt="${product.name}">
                        <div class="card-body p-0" style="display: flex; flex-direction: column; height: 100%;">
                            <span class="text-warning" style="font-size: 16px; letter-spacing: 5px;">
                                ${starsHtml}
                            </span>
                            <h6 class="card-title" style="font-weight: bold; font-size: 14px;">${product.name}</h6>
                            <p class="d-flex justify-content-center" style="font-size: 14px;">
                                <span class="fw-bold" style="color: #80B500;">${(product.price).toLocaleString('vi-VN')}đ</span>
                            </p>
                            <form action="/Product/Details" method="post" style="margin-top: auto;">
                                <input type="hidden" name="id" value="${product.id}">
                                <button type="submit" class="fw-bold w-100" style="background-color: #E86D1F; border: none; border-bottom-left-radius: 20px; border-bottom-right-radius: 20px; color: white; font-size: 14px; padding: 5px 10px;">
                                    Details
                                </button>
                            </form>
                        </div>
                        <!-- Panel trồi ra khi hover -->
                        <div class="hover-panel">
                            <div class="quantity-control">
                                <button class="quantity-btn increase" data-product-id="${product.id}">+</button>
                                <input type="number" class="quantity-input" value="1" min="1" data-product-id="${product.id}">
                                <button class="quantity-btn decrease" data-product-id="${product.id}">-</button>
                            </div>
                            <button class="cart-btn" title="Add to Cart" data-product-id="${product.id}">
                                <i class="fas fa-shopping-cart"></i>
                                <img class="product-icon" src="${product.imageUrl}" alt="${product.name}">
                            </button>
                        </div>
                    </div>
                `;
                    productContainer.innerHTML += productHTML;
                });

                // Thêm sự kiện cho các nút sau khi render
                addQuantityControls();
                addCartButtonEvents();

                // Hiển thị thông báo nếu không có sản phẩm nào
                if (products.length === 0) {
                    productContainer.innerHTML = '<div class="alert alert-info col-12">No products available.</div>';
                }
            }

            // Function to handle quantity controls
            function addQuantityControls() {
                const decreaseButtons = document.querySelectorAll('.quantity-btn.decrease');
                const increaseButtons = document.querySelectorAll('.quantity-btn.increase');
                const quantityInputs = document.querySelectorAll('.quantity-input');

                decreaseButtons.forEach(button => {
                    button.addEventListener('click', () => {
                        const input = button.parentElement.querySelector('.quantity-input');
                        let value = parseInt(input.value);
                        if (value > 1) {
                            input.value = value - 1;
                        }
                    });
                });

                increaseButtons.forEach(button => {
                    button.addEventListener('click', () => {
                        const input = button.parentElement.querySelector('.quantity-input');
                        let value = parseInt(input.value);
                        input.value = value + 1;
                    });
                });

                quantityInputs.forEach(input => {
                    input.addEventListener('input', () => {
                        let value = parseInt(input.value);
                        if (isNaN(value) || value < 1) {
                            input.value = 1;
                        }
                    });
                });
            }

            // Function to handle cart button animations
            function addCartButtonEvents() {
                const cartButtons = document.querySelectorAll('.cart-btn');
                cartButtons.forEach(button => {
                    button.addEventListener('click', (e) => {
                        e.preventDefault();
                        // Giữ nguyên hiệu ứng
                        button.classList.add('cart-btn-animating');
                        const productIcon = button.querySelector('.product-icon');
                        productIcon.classList.add('product-icon-active');
                        setTimeout(() => {
                            button.classList.remove('cart-btn-animating');
                            productIcon.classList.remove('product-icon-active');
                        }, 600);

                        // Lấy thông tin sản phẩm
                        const productId = button.getAttribute('data-product-id');
                        const quantityInput = button.parentElement.querySelector('.quantity-input');
                        const quantity = parseInt(quantityInput.value);

                        // Gửi request với query parameters
                        fetch(`/Cart/AddToCart?productId=${productId}&quantity=${quantity}`, {
                            method: 'POST'
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Cập nhật số lượng trên icon giỏ hàng
                                document.getElementById('cart-count').textContent = data.cartItemCount;
                                document.getElementById('tablet-cart-count').textContent = data.cartItemCount;
                                document.getElementById('mobile-cart-count').textContent = data.cartItemCount;

                                // Hiển thị thông báo thành công (nếu có)
                                alert('Đã thêm vào giỏ hàng!');
                            } else {
                                alert(data.message || 'Không thể thêm vào giỏ hàng');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Đã xảy ra lỗi khi thêm vào giỏ hàng');
                        });
                    });
                });
            }

            // Render pagination
            function renderPagination() {
                paginationControls.innerHTML = '';
                const totalPages = Math.ceil(products.length / productsPerPage);

                if (totalPages <= 1) return; // Không cần phân trang nếu chỉ có 1 trang

                // Previous button
                const prevItem = `
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a>
                    </li>
                `;
                paginationControls.innerHTML += prevItem;

                // Page numbers
                for (let i = 1; i <= totalPages; i++) {
                    const pageItem = `
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `;
                    paginationControls.innerHTML += pageItem;
                }

                // Next button
                const nextItem = `
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">Next</a>
                    </li>
                `;
                paginationControls.innerHTML += nextItem;

                // Thêm sự kiện cho các nút phân trang
                document.querySelectorAll('.page-link').forEach(link => {
                    link.addEventListener('click', function(e) {
                        e.preventDefault();
                        if (this.parentElement.classList.contains('disabled')) return;

                        const page = parseInt(this.getAttribute('data-page'));
                        currentPage = page;
                        displayProducts(page);
                        renderPagination();

                        // Scroll to product container
                        window.scrollTo({ top: productContainer.offsetTop - 50, behavior: 'smooth' });
                    });
                });
            }

            // Hiển thị sản phẩm và phân trang khi trang được tải
            displayProducts(1);
            renderPagination();

            // Handle window resize
            window.addEventListener('resize', function() {
                // Recalculate margins
                const containerWidth = productContainer.offsetWidth;
                const cardWidth = 200;
                const totalCardWidth = cardWidth * cardsPerRow;
                const newMarginLeft = (containerWidth - totalCardWidth) / (cardsPerRow + 1);
                const newMarginBottom = newMarginLeft / 2;

                // Update margins
                document.querySelectorAll('.card').forEach(card => {
                    if (window.innerWidth > 991.98) {
                        card.style.marginLeft = `${newMarginLeft}px`;
                        card.style.marginBottom = `${newMarginBottom}px`;
                    } else {
                        card.style.margin = '10px';
                    }
                });
            });

            // Make categories collapsible on mobile
            const categoryHeader = document.querySelector('.list-group-item.category-header');
            const categoryItems = document.querySelectorAll('.list-group-item:not(.category-header)');

            if (categoryHeader && window.innerWidth <= 991.98) {
                categoryHeader.addEventListener('click', function() {
                    categoryItems.forEach(item => {
                        if (item.style.display === 'none' || item.style.display === '') {
                            item.style.display = 'flex';
                        } else {
                            item.style.display = 'none';
                        }
                    });
                });

                // Initially hide on mobile
                if (window.innerWidth <= 767.98) {
                    categoryItems.forEach(item => {
                        item.style.display = 'none';
                    });
                }
            }
        });
    </script>

    <style>
        /* Responsive styles */
        @@media (max-width: 991.98px) {
            /* Banner section */
            .row .col-6 {
                flex: 0 0 100%;
                max-width: 100%;
                margin-bottom: 20px;
            }
            /* Banner text */
            .row .col-6 p[style*="font-size: 42px"] {
                font-size: 36px !important;
                text-align: center;
            }

            .row .col-6 p.pb-2 {
                max-width: 100% !important;
                text-align: center;
            }
            /* Banner buttons - tablet */
            .row .col-6 .d-flex.gap-3 {
                justify-content: center;
                width: 100%;
                max-width: 500px;
                margin: 0 auto;
            }

            .row .col-6 .d-flex.gap-3 .btn {
                max-width: 45% !important; /* Tăng chiều rộng nút */
                padding: 10px 15px !important; /* Tăng padding */
                font-size: 16px !important; /* Tăng cỡ chữ */
                font-weight: bold;
            }
            /* Service highlights */
            .row .col-3 {
                flex: 0 0 50%;
                max-width: 50%;
                margin-bottom: 15px;
            }
            /* Service title and subtitle */
            .row .col-3 p[style*="font-size: 20px"] {
                font-size: 18px !important;
            }

            .row .col-3 p[style*="font-size: 10px"] {
                font-size: 9px !important;
            }
            /* Category circles */
            .d-flex.justify-content-evenly {
                flex-wrap: wrap !important;
            }

            .d-flex.justify-content-evenly > div {
                flex: 0 0 33.33%;
                margin-bottom: 20px;
            }

            .d-flex.justify-content-evenly > div div[style*="border-radius: 50%"] {
                width: 120px !important;
                height: 120px !important;
                border-width: 8px !important;
            }
            /* Categories and products */
            .row .col-3[style*="padding-left: 30px"] {
                flex: 0 0 100%;
                max-width: 100%;
                margin-bottom: 20px;
            }

            .row #product-container {
                flex: 0 0 100%;
                max-width: 100%;
            }
            /* Pagination */
            .row .col-9.d-flex.justify-content-center {
                flex: 0 0 100%;
                max-width: 100%;
            }
            /* Carousel */
            .carousel-inner {
                height: 400px !important;
            }

            .carousel-item img {
                height: 400px !important;
            }
        }

        @@media (max-width: 767.98px) {
            /* Banner text */
            .row .col-6 p[style*="font-size: 42px"] {
                font-size: 28px !important;
            }

            .row .col-6 p.pb-2 {
                font-size: 14px !important;
                line-height: 1.6 !important;
            }
            /* Banner buttons - mobile */
            .row .col-6 .d-flex.gap-3 {
                max-width: 400px;
            }

            .row .col-6 .d-flex.gap-3 .btn {
                font-size: 14px !important;
                padding: 8px 12px !important;
            }
            /* Service icons */
            .row .col-3 img[style*="width: 50px"] {
                width: 40px !important;
                height: 40px !important;
            }
            /* Service text */
            .row .col-3 p[style*="font-size: 20px"] {
                font-size: 16px !important;
            }
            /* Category circles */
            .d-flex.justify-content-evenly > div {
                flex: 0 0 50%;
            }

            .d-flex.justify-content-evenly > div div[style*="border-radius: 50%"] {
                width: 100px !important;
                height: 100px !important;
                border-width: 6px !important;
            }

            .d-flex.justify-content-evenly > div p[style*="font-weight: bold"] {
                font-size: 12px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                max-width: 100px;
                margin: 0 auto !important;
            }
            /* Make product cards responsive */
            .card {
                margin-left: 10px !important;
                margin-right: 10px !important;
            }
            /* Carousel */
            .carousel-inner {
                height: 300px !important;
            }

            .carousel-item img {
                height: 300px !important;
            }
        }

        @@media (max-width: 575.98px) {
            /* Banner text */
            .row .col-6 p[style*="font-size: 42px"] {
                font-size: 24px !important;
            }
            /* Banner buttons - small mobile */
            .row .col-6 .d-flex.gap-3 {
                max-width: 300px;
                gap: 10px !important;
            }

            .row .col-6 .d-flex.gap-3 .btn {
                max-width: 48% !important;
                font-size: 12px !important;
                padding: 8px 10px !important;
                white-space: nowrap;
            }
            /* Ẩn icon mũi tên trên điện thoại nhỏ */
            .row .col-6 .d-flex.gap-3 .btn i {
                display: none;
            }
            /* Category circles */
            .d-flex.justify-content-evenly > div div[style*="border-radius: 50%"] {
                width: 80px !important;
                height: 80px !important;
                border-width: 4px !important;
            }

            .d-flex.justify-content-evenly > div p[style*="font-weight: bold"] {
                font-size: 10px;
                max-width: 80px;
            }
            /* Carousel */
            .carousel-inner {
                height: 200px !important;
            }

            .carousel-item img {
                height: 200px !important;
            }
        }

        /* Product grid system for responsive display */
        @@media (max-width: 991.98px) {
            /* Override the fixed positioning */
            #product-container {
                display: flex !important;
                flex-wrap: wrap !important;
                justify-content: center !important;
            }

            #product-container .card {
                max-width: 220px !important;
                margin: 10px !important;
            }
        }

        @@media (max-width: 767.98px) {
            #product-container .card {
                max-width: 200px !important;
            }

            #product-container .card .card-img-top {
                height: 180px !important;
            }

            #product-container .card .card-title {
                font-size: 12px !important;
            }

            #product-container .card p {
                font-size: 12px !important;
            }

            #product-container .card .text-warning {
                font-size: 14px !important;
                letter-spacing: 3px !important;
            }
        }

        @@media (max-width: 575.98px) {
            #product-container .card {
                max-width: 160px !important;
                height: 280px !important;
            }

            #product-container .card .card-img-top {
                height: 150px !important;
            }

            #product-container .card .text-warning {
                font-size: 12px !important;
                letter-spacing: 2px !important;
            }
        }

        /* Accordion for categories on mobile */
        @@media (max-width: 991.98px) {
            #category-list {
                margin-bottom: 20px;
            }

            #category-list .list-group-item.category-header {
                cursor: pointer;
            }
            /* Pagination adjusted */
            .pagination .page-link {
                padding: 0.4rem 0.75rem;
            }
            /* Simplified pagination for mobile */
            @@media (max-width: 575.98px) {
                .pagination li:not(.active):not(:first-child):not(:last-child):not(:nth-child(2)):not(:nth-last-child(2)) {
                    display: none;
                }
            }
        }
    </style>
}