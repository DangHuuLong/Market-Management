@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Section: Banner giới thiệu sản phẩm tươi sống với nút kêu gọi hành động (CTA) -->
<div class="row p-lg-3">
    <div class="col-6" style="padding-left: 30px;">
        <p style="font-size: 42px; font-weight: bold;">Make healthy life with <span style="color: var(--green-color);">fresh</span> grocery</p>

        <p class="pb-2" style="max-width: 90%; line-height: 2;">
            Get the best quality and freshest grocery food, sourced directly from local farms.
            From organic vegetables to premium meat, we have everything you need for a healthy lifestyle.
            Order now and enjoy doorstep delivery with just a few clicks!
            Our commitment is to bring you farm-fresh ingredients that retain their natural taste and nutrients.
            We ensure strict quality control, so you receive only the best products every time.
            Join thousands of happy customers who trust us for their daily grocery needs.
        </p>

        <div class="d-flex gap-3">
            <a href="#product-container" class="btn rounded-pill flex-grow-1 py-2" style="background-color: var(--green-color); color: white; max-width: 33.33%;">
                Order Now
            </a>
            <button class="btn rounded-pill flex-grow-1 py-2" style="border: 1px solid; max-width: 33.33%;">
                Explore More <i class="bi bi-arrow-right"></i>
            </button>
        </div>
    </div>
    <div class="col-6 d-flex justify-content-center align-items-center" style="height: 100%;">
        <div id="groceryCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active" data-bs-interval="2000">
                    <img src="~/img/hand&tomato.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 1">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/column2.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 2">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/MeatAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 3">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/CandyAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/MilkAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/BreadAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/EggAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/CakeAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 1">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/RiceAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 2">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/SugarAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 3">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/SpiceAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/IcecreamAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/TeaAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="~/img/CoffeeAd.jpg" class="d-block w-100 img-fluid" alt="Fresh Grocery 4">
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#groceryCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#groceryCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>



<!-- Service Highlights: Free Shipping, Returns, Secure Payment, Offers -->
<div class="row py-3 d-flex align-items-center justify-content-center" style="background-color: var(--brown-weak-color);">
    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/free-shipping.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">Free shipping</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">On all orders over $49.00</p>
        </div>
    </div>

    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/money.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">15 days returns</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">Moneyback guarantee</p>
        </div>
    </div>

    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/paypalcard.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">Secure checkout</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">Protected by Paypal</p>
        </div>
    </div>

    <div class="col-3 d-flex align-items-center py-1 justify-content-center">
        <img src="~/img/sale.png" style="width: 50px; height: 50px; margin-right: 10px;" />
        <div class="d-flex flex-column">
            <p class="mb-0 fw-bold" style="font-size: 20px;">Offer & gift here</p>
            <p class="mb-0 text-muted" style="font-size: 10px;">On all orders over</p>
        </div>
    </div>
</div>

<!--Image-->
<div class="d-flex justify-content-evenly" style="margin-top: 20px; margin-bottom: 40px;">
    <!--Image Decoration-->
    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Fresh Fruit</p>
        <div style="border-radius: 50%; background-color: #FFB703; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #E63946;">
            <img src="../img/fruits.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Organic Vegetables</p>
        <div style="border-radius: 50%; background-color: #A7C957; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #6A994E; ">
            <img src="../img/vegetable.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Premium Meat</p>
        <div style="border-radius: 50%; background-color: #D62828; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #023047; ">
            <img src="../img/meat.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Bakery & Pastries</p>
        <div style="border-radius: 50%; background-color: #F6D6AD; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #D4A373; ">
            <img src="../img/bread.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Snacks & Sweets</p>
        <div style="border-radius: 50%; background-color: #FFBA08; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #9B2226; ">
            <img src="../img/candies.png" width="70%" height="70%" />
        </div>
    </div>

    <div class="d-flex flex-column align-items-center mt-3">
        <p style="font-weight: bold;" class="p-0 m-0">Dairy & Beverages</p>
        <div style="border-radius: 50%; background-color: #F5F3F4; width: 140px; height: 140px; overflow: hidden; display: flex; justify-content: center; align-items: center; border: 10px solid #4895EF; ">
            <img src="../img/milk.png" width="70%" height="70%" />
        </div>
    </div>
</div>

<!-- Categories and Product -->
<div class="row">
    <!-- Categories -->
    <div class="col-3" style="padding-left: 30px; padding-right: 0;">
        <ul class="list-group" id="category-list">
            <li class="list-group-item category-header" style="background-color: #E6DACE; font-weight: bold; font-size: 18px;">
                <i class="bi bi-list"></i> CATEGORIES
            </li>
            @foreach (var category in new[] { "Vegetables", "Fresh Meat", "Fish and Seafood", "Butter and Cream", "Oil and Vinegar", "Breads", "Apple Juice", "Dry Nuts", "Frozen Foods", "Canned Foods", "Spices and Herbs", "Snacks and Chips", "Baby Food", "Coffee", "Tea", "Fruits" })
            {
                <li class="list-group-item d-flex align-items-center">
                    <img src="@Url.Content("~/img/" + category + ".png")" class="category-icon" />
                    <p class="m-0">@category</p>
                </li>
            }
        </ul>
    </div>

    <!-- List Product -->
    <div id="product-container" class="d-flex flex-wrap justify-content-start col-9">
        <!-- Products will be added dynamically via JavaScript -->
    </div>

    <!-- Pagination Controls -->
    <div class="col-9 d-flex justify-content-center mt-4">
        <nav aria-label="Product pagination">
            <ul class="pagination" id="pagination-controls">
                <!-- Pagination buttons will be added dynamically -->
            </ul>
        </nav>
    </div>
</div>

<style>
    .carousel-inner {
        border-radius: 10px;
        overflow: hidden;
        height: 500px;
    }

    .carousel-item img {
        object-fit: cover;
        height: 500px;
        width: 100%;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 10%;
        background: none;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        filter: brightness(0) invert(1);
        width: 30px;
        height: 30px;
    }

    .pagination .page-link {
        color: #6D7B30;
        border-radius: 5px;
        margin: 0 5px;
        cursor: pointer;
    }

        .pagination .page-link:hover {
            background-color: #E6DACE;
            color: #314401;
        }

    .pagination .active .page-link {
        background-color: #6D7B30;
        color: white;
        border-color: #6D7B30;
    }

    .pagination .disabled .page-link {
        color: #ccc;
        pointer-events: none;
        cursor: default;
    }
</style>

@section Scripts {
    <style>
        /* Đảm bảo container chứa panel không làm ảnh hưởng bố cục */
        .card {
            position: relative;
            overflow: visible; /* Cho phép panel trồi ra ngoài */
        }

        /* Panel trồi ra */
        .hover-panel {
            position: absolute;
            top: 0;
            left: 0; /* Neo vào cạnh trái */
            width: 50px; /* Chiều rộng nhỏ gọn */
            height: 100%; /* Cao bằng thẻ card */
            background-color: #ffffff;
            box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1); /* Bóng ở bên phải */
            transform: translateX(-100%); /* Ẩn hoàn toàn bên trái */
            opacity: 0; /* Vô hình */
            transition: transform 0.3s ease, opacity 0.3s ease; /* Hiệu ứng mượt */
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 10px; /* Khoảng cách giữa các phần tử */
            z-index: 0; /* Nằm sau khi ẩn */
        }

        /* Trồi ra và hiện khi hover */
        .card:hover .hover-panel {
            transform: translateX(calc(-100% - 10px)); /* Trồi ra bên trái, cách 10px */
            opacity: 1; /* Hiện rõ */
            z-index: 10; /* Lên trên khi hover */
        }

        /* Nút giỏ hàng */
        .cart-btn {
            background-color: #E86D1F;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s, transform 0.2s; /* Transition cho phóng to */
            position: relative; /* Để định vị ảnh sản phẩm */
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .cart-btn:hover {
                background-color: #d65e1a;
            }

        /* Hiệu ứng phóng to nút giỏ hàng */
        .cart-btn-animating {
            transform: scale(1.5); /* Phóng to 50% */
        }

        /* Ảnh sản phẩm */
        .product-icon {
            position: absolute;
            width: 20px; /* Kích thước nhỏ để vừa panel */
            height: 20px;
            opacity: 0; /* Ẩn mặc định */
            transform: translateY(0); /* Ở vị trí ban đầu */
            transition: opacity 0.3s ease; /* Transition cho opacity */
            object-fit: cover; /* Đảm bảo ảnh không méo */
        }

        /* Hiệu ứng ảnh sản phẩm trồi lên rồi chui xuống */
        .product-icon-active {
            animation: productAnimation 0.6s ease-in-out; /* Animation 0.6s */
        }

        /* Keyframes cho ảnh sản phẩm */
        @@keyframes productAnimation {
            0%

        {
            opacity: 0;
            transform: translateY(0);
        }

        25% {
            opacity: 1;
            transform: translateY(-20px); /* Trồi lên 20px */
        }

        50% {
            opacity: 1;
            transform: translateY(-20px);
        }

        75% {
            opacity: 0;
            transform: translateY(0); /* Chui xuống */
        }

        100% {
            opacity: 0;
            transform: translateY(0);
        }

        }

        /* Thanh tăng giảm số lượng */
        .quantity-control {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
        }

        .quantity-btn {
            background-color: #80B500;
            color: white;
            border: none;
            border-radius: 5px;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s;
        }

            .quantity-btn:hover {
                background-color: #6a9300;
            }

        .quantity-input {
            width: 35px;
            text-align: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 2px;
            font-size: 14px;
        }

            /* Vô hiệu hóa mũi tên mặc định của input number */
            .quantity-input::-webkit-inner-spin-button,
            .quantity-input::-webkit-outer-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }

        .quantity-input {
            -moz-appearance: textfield; /* Firefox */
        }
    </style>

    <script>
                const productsPerPage = 20; // Max products per page
                const cardsPerRow = 4; // Cards per row
                let currentPage = 1;
                const totalProducts = 50; // Simulate more products

                // Get product container
                const productContainer = document.getElementById("product-container");
                const paginationControls = document.getElementById("pagination-controls");

                // Calculate margins
                const containerWidth = productContainer.offsetWidth;
                const cardWidth = 200; // Chiều rộng mỗi thẻ
                const totalCardWidth = cardWidth * cardsPerRow;
                const marginLeft = (containerWidth - totalCardWidth) / (cardsPerRow + 1);
                const marginBottom = marginLeft / 2;

                // Function to render products for the current page
                function renderProducts(page) {
                    productContainer.innerHTML = ''; // Clear previous products
                    const start = (page - 1) * productsPerPage;
                    const end = Math.min(start + productsPerPage, totalProducts);

                    for (let i = start; i < end; i++) {
                        const productId = i + 1; // Giả lập ID sản phẩm
                        const productImage = "../img/—Pngtree—red fresh tomato with green_8933861.png"; // Ảnh sản phẩm
                        const productHTML = `
                            <div class="card text-center" style="border-radius: 20px; max-width: 250px; height: 305px; margin-left: ${marginLeft}px; margin-bottom: ${marginBottom}px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
                                <img src="${productImage}"
                                     style="background-color: #EDEDED; border-top-left-radius: 20px; border-top-right-radius: 20px; height: 200px; width: 100%; object-fit: cover;"
                                     class="card-img-top" alt="Sản phẩm">
                                <div class="card-body p-0" style="display: flex; flex-direction: column; height: 100%;">
                                    <span class="text-warning" style="font-size: 16px; letter-spacing: 5px;">★★★★★</span>
                                    <h6 class="card-title" style="font-weight: bold; font-size: 14px;">Fresh Ruby Tomatoes</h6>
                                    <p class="d-flex justify-content-evenly" style="font-size: 14px;">
                                        <span class="fw-bold" style="color: #80B500;">150.000đ</span>
                                        <span class="old-price" style="color: #94A84E; text-decoration: line-through;">200.000đ</span>
                                    </p>
                                    <a href="/Product/Details" class="fw-bold" style="display: block; background-color: #E86D1F; border-bottom-left-radius: 20px; border-bottom-right-radius: 20px; color: white; font-size: 14px; margin-top: auto; text-align: center; padding: 5px 10px;">
                                        Details
                                    </a>
                                </div>
                                <!-- Panel trồi ra khi hover -->
                                <div class="hover-panel">
                                    <div class="quantity-control">
                                        <button class="quantity-btn increase" data-product-id="${productId}">+</button>
                                        <input type="number" class="quantity-input" value="1" min="1" data-product-id="${productId}">
                                        <button class="quantity-btn decrease" data-product-id="${productId}">-</button>
                                    </div>
                                    <button class="cart-btn" title="Add to Cart" data-product-id="${productId}">
                                        <i class="fas fa-shopping-cart"></i>
                                        <img class="product-icon" src="${productImage}" alt="Sản phẩm">
                                    </button>
                                </div>
                            </div>
                        `;
                        productContainer.innerHTML += productHTML;
                    }

                    // Thêm sự kiện cho các nút sau khi render
                    addQuantityControls();
                    addCartButtonEvents();
                }

                // Function to handle quantity controls
                function addQuantityControls() {
                    const decreaseButtons = document.querySelectorAll('.quantity-btn.decrease');
                    const increaseButtons = document.querySelectorAll('.quantity-btn.increase');
                    const quantityInputs = document.querySelectorAll('.quantity-input');

                    decreaseButtons.forEach(button => {
                        button.addEventListener('click', () => {
                            const input = button.previousElementSibling;
                            let value = parseInt(input.value);
                            if (value > 1) {
                                input.value = value - 1;
                            }
                        });
                    });

                    increaseButtons.forEach(button => {
                        button.addEventListener('click', () => {
                            const input = button.nextElementSibling;
                            let value = parseInt(input.value);
                            input.value = value + 1;
                        });
                    });

                    quantityInputs.forEach(input => {
                        input.addEventListener('input', () => {
                            let value = parseInt(input.value);
                            if (isNaN(value) || value < 1) {
                                input.value = 1;
                            }
                        });
                    });
                }

                // Function to handle cart button
                function addCartButtonEvents() {
                    const cartButtons = document.querySelectorAll('.cart-btn');
                    cartButtons.forEach(button => {
                        button.addEventListener('click', () => {
                            // Thêm lớp để phóng to nút
                            button.classList.add('cart-btn-animating');
                            // Thêm lớp để kích hoạt hiệu ứng ảnh sản phẩm
                            const productIcon = button.querySelector('.product-icon');
                            productIcon.classList.add('product-icon-active');
                            // Xóa các lớp sau 0.6s
                            setTimeout(() => {
                                button.classList.remove('cart-btn-animating');
                                productIcon.classList.remove('product-icon-active');
                            }, 600);
                            // Logic hiện tại
                            const productId = button.getAttribute('data-product-id');
                            const quantityInput = button.previousElementSibling.querySelector('.quantity-input');
                            const quantity = parseInt(quantityInput.value);
                            // alert(`Added ${quantity} product(s) with ID ${productId} to cart!`);
                            // TODO: Thay bằng logic thêm vào giỏ hàng
                        });
                    });
                }

                // Function to render pagination controls
                function renderPagination() {
                    paginationControls.innerHTML = '';
                    const totalPages = Math.ceil(totalProducts / productsPerPage);

                    // Previous button
                    const prevItem = `
                        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                            <a class="page-link" data-page="${currentPage - 1}">Previous</a>
                        </li>
                    `;
                    paginationControls.innerHTML += prevItem;

                    // Page numbers
                    for (let i = 1; i <= totalPages; i++) {
                        const pageItem = `
                            <li class="page-item ${i === currentPage ? 'active' : ''}">
                                <a class="page-link" data-page="${i}">${i}</a>
                            </li>
                        `;
                        paginationControls.innerHTML += pageItem;
                    }

                    // Next button
                    const nextItem = `
                        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                            <a class="page-link" data-page="${currentPage + 1}">Next</a>
                        </li>
                    `;
                    paginationControls.innerHTML += nextItem;
                }

                // Function to change page
                function changePage(page, event) {
                    event.preventDefault(); // Prevent default link behavior
                    const totalPages = Math.ceil(totalProducts / productsPerPage);
                    if (page < 1 || page > totalPages) return;
                    currentPage = page;
                    renderProducts(currentPage);
                    renderPagination();
                    // Scroll to product container
                    window.scrollTo({ top: productContainer.offsetTop - 50, behavior: 'smooth' });
                }

                // Event listener for pagination clicks
                paginationControls.addEventListener('click', function(event) {
                    const target = event.target.closest('.page-link');
                    if (target && !target.parentElement.classList.contains('disabled')) {
                        const page = parseInt(target.getAttribute('data-page'));
                        changePage(page, event);
                    }
                });

                // Initial render
                renderProducts(currentPage);
                renderPagination();
    </script>
}