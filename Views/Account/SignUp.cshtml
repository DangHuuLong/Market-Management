@{
    ViewData["Title"] = "Sign Up - Organic Grocery";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <!-- Link CSS Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link href="~/css/site.css" rel="stylesheet" />
    <style>
        body {
            overflow-x: hidden;
        }

        .gender-options {
            display: flex;
            gap: 15px;
        }

        .gender-option {
            flex: 1;
        }

        .form-check-input {
            margin-top: 0;
        }

        .btn-signup {
            background-color: #212529;
            color: white;
            transition: all 0.3s ease;
        }

            .btn-signup:hover {
                background-color: #343a40;
                color: white;
            }

            .btn-signup:disabled {
                background-color: #6c757d;
                cursor: not-allowed;
                opacity: 0.65;
            }

        /* Hiệu ứng focus cho ô input hiện tại */
        .form-control:focus, .form-check-input:focus {
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            border-color: #86b7fe;
        }

        /* Responsive styles */
        .signup-title {
            font-size: 64px;
            font-weight: bold;
            letter-spacing: 10px;
        }

        .signup-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* Back to home button for mobile */
        .back-home {
            position: fixed;
            top: 15px;
            left: 15px;
            z-index: 1000;
            display: none;
        }

        /* Tablet styles */
        @@media (max-width: 991.98px) {
            .signup-title

        {
            font-size: 48px;
            letter-spacing: 6px;
        }

        .signup-container {
            padding: 1.5rem;
        }

        }

        /* Mobile styles */
        @@media (max-width: 767.98px) {
            .signup-title

        {
            font-size: 36px;
            letter-spacing: 4px;
        }

        .signup-container {
            padding: 1rem;
        }

        .gender-options {
            flex-direction: column;
            gap: 10px;
        }

        .back-home {
            display: block;
        }

        }

        /* Extra small devices */
        @@media (max-width: 575.98px) {
            .signup-title

        {
            font-size: 28px;
            letter-spacing: 2px;
            margin-bottom: 1rem !important;
        }

        .social-icons .btn {
            width: 35px !important;
            height: 35px !important;
        }

        }
    </style>
</head>

<body>
    <!-- Back to home button for mobile -->
    <a href="/" class="btn btn-light rounded-circle shadow-sm back-home">
        <i class="bi bi-house-fill"></i>
    </a>

    <div class="container-fluid p-0">
        <div class="signup-container d-flex flex-column justify-content-center min-vh-100 py-3 py-md-5">
            <div class="w-100">
                <p class="text-center mb-4 signup-title">SIGN UP</p>

                <form id="signupForm" asp-action="SignUp" method="post">
                    <!-- Hàng 1: Full Name và Email -->
                    <div class="row mb-3">
                        <div class="col-md-6 mb-3 mb-md-0">
                            <div class="form-floating">
                                <input type="text" class="form-control form-field" id="floatingName" placeholder="Full Name" tabindex="1"
                                       name="Name" pattern="^[a-zA-ZÀ-ỹ][a-zA-ZÀ-ỹ0-9\s]*$" required>
                                <label for="floatingName"><i class="bi bi-person-badge-fill"></i> Full Name</label>
                                <div class="invalid-feedback">Vui lòng nhập tên hợp lệ (không chứa số hoặc ký tự đặc biệt)</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="email" class="form-control form-field" id="floatingEmail" placeholder="Email" tabindex="2"
                                       name="Email"
                                       pattern="[a-zA-Z0-9._%+-]+\@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
                                       required>
                                <label for="floatingEmail"><i class="bi bi-envelope-fill"></i> Email</label>
                                <div class="invalid-feedback">Vui lòng nhập email hợp lệ (ví dụ: example@domain.com)</div>
                            </div>
                        </div>
                    </div>

                    <!-- Hàng 2: Phone và Date of Birth -->
                    <div class="row mb-3">
                        <div class="col-md-6 mb-3 mb-md-0">
                            <div class="form-floating">
                                <input type="tel" class="form-control form-field" id="floatingPhone" placeholder="Phone Number" tabindex="3"
                                       name="Phone" pattern="[0-9]{10}" required>
                                <label for="floatingPhone"><i class="bi bi-telephone-fill"></i> Phone Number</label>
                                <div class="invalid-feedback">Số điện thoại phải có đúng 10 chữ số</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="date" class="form-control form-field" id="floatingDate" placeholder="Date of Birth" name="DateOfBirth" tabindex="4" required>
                                <label for="floatingDate"><i class="bi bi-calendar-fill"></i> Date of Birth</label>
                                <div class="invalid-feedback">Vui lòng chọn ngày sinh</div>
                            </div>
                        </div>
                    </div>

                    <!-- Gender -->
                    <div class="mb-3">
                        <label class="form-label"><i class="bi bi-gender-ambiguous"></i> Gender</label>
                        <div class="gender-options">
                            <div class="form-check gender-option">
                                <input class="form-check-input form-field" type="radio" name="Sex" id="male" value="Male" tabindex="5" checked required>
                                <label class="form-check-label" for="male">Male</label>
                            </div>
                            <div class="form-check gender-option">
                                <input class="form-check-input form-field" type="radio" name="Sex" id="female" value="Female" tabindex="6" required>
                                <label class="form-check-label" for="female">Female</label>
                            </div>
                            <div class="form-check gender-option">
                                <input class="form-check-input form-field" type="radio" name="Sex" id="other" value="Other" tabindex="7" required>
                                <label class="form-check-label" for="other">Other</label>
                            </div>
                        </div>
                    </div>

                    <!-- Address -->
                    <div class="form-floating mb-3">
                        <textarea class="form-control form-field" id="floatingAddress" placeholder="Address" style="height: 100px" name="Address" tabindex="8" required></textarea>
                        <label for="floatingAddress"><i class="bi bi-house-fill"></i> Address</label>
                        <div class="invalid-feedback">Vui lòng nhập địa chỉ</div>
                    </div>

                    <!-- Hàng 3: Username và Password -->
                    <div class="row mb-3">
                        <div class="col-md-6 mb-3 mb-md-0">
                            <div class="form-floating">
                                <input type="text" class="form-control form-field" id="floatingUsername" placeholder="User Name" tabindex="9"
                                       name="UserName" pattern="^[a-zA-ZÀ-ỹ][a-zA-ZÀ-ỹ0-9\s]*$" required>
                                <label for="floatingUsername"><i class="bi bi-person-fill"></i> User Name</label>
                                <div class="invalid-feedback">Tên đăng nhập phải bắt đầu bằng chữ cái và chỉ chứa chữ cái và số</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating position-relative">
                                <input type="password" class="form-control form-field" id="floatingPassword" placeholder="Password" tabindex="10"
                                       name="PassWord" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,}$" required>
                                <label for="floatingPassword"><i class="bi bi-lock-fill"></i> Password</label>
                                <i class="bi bi-eye-fill position-absolute end-0 top-50 translate-middle-y me-3" id="togglePassword" style="cursor: pointer;"></i>
                                <div class="invalid-feedback">
                                    Mật khẩu phải có ít nhất 8 ký tự, bao gồm chữ hoa, chữ thường, số và ký tự đặc biệt
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Confirm Password -->
                    <div class="form-floating mb-3 position-relative">
                        <input type="password" class="form-control form-field" id="floatingConfirmPassword" tabindex="11"
                               placeholder="Confirm Password" name="ConfirmPassword" required>
                        <label for="floatingConfirmPassword"><i class="bi bi-lock-fill"></i> Confirm Password</label>
                        <i class="bi bi-eye-fill position-absolute end-0 top-50 translate-middle-y me-3" id="toggleConfirmPassword" style="cursor: pointer;"></i>
                        <div class="invalid-feedback">Mật khẩu xác nhận không khớp</div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="form-check">
                            <input class="form-check-input form-field" type="checkbox" id="agreeTerms" name="AgreeToTerms" tabindex="12" required>
                            <label class="form-check-label" for="agreeTerms">I agree to the <a href="#" class="text-primary">Terms & Conditions</a></label>
                            <div class="invalid-feedback">You must agree to the terms</div>
                        </div>
                    </div>

                    <button id="signUpBtn" type="submit" class="btn btn-signup w-100 mb-3 py-2" tabindex="13" disabled>SIGN UP</button>
                </form>

                <div class="d-flex align-items-center my-3">
                    <hr class="flex-grow-1">
                    <span class="mx-3 text-muted">Or sign in with</span>
                    <hr class="flex-grow-1">
                </div>

                <div class="d-flex justify-content-center gap-3 mb-3 social-icons">
                    <button class="btn btn-outline-secondary rounded-circle p-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                        <i class="bi bi-google"></i>
                    </button>
                    <button class="btn btn-outline-secondary rounded-circle p-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                        <i class="bi bi-threads"></i>
                    </button>
                    <button class="btn btn-outline-secondary rounded-circle p-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                        <i class="bi bi-facebook"></i>
                    </button>
                    <button class="btn btn-outline-secondary rounded-circle p-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                        <i class="bi bi-instagram"></i>
                    </button>
                </div>

                <div class="text-center">
                    <a asp-controller="Account" asp-action="Main" class="text-decoration-none me-1"><i class="bi bi-arrow-bar-left"></i></a>
                    Already have an account?
                    <a asp-controller="Account" asp-action="SignIn" class="text-primary text-decoration-underline">Sign in now</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Link JS Bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('signupForm');
            const signUpBtn = document.getElementById('signUpBtn');
            const password = document.getElementById('floatingPassword');
            const confirmPassword = document.getElementById('floatingConfirmPassword');
            const agreeTerms = document.getElementById('agreeTerms');
            const togglePassword = document.getElementById('togglePassword');
            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');

            // Lấy tất cả các trường input theo thứ tự tab
            const formFields = Array.from(form.querySelectorAll('.form-field')).sort((a, b) => {
                return parseInt(a.getAttribute('tabindex') || '0') - parseInt(b.getAttribute('tabindex') || '0');
            });

            // Đặt focus vào trường đầu tiên khi trang tải
            formFields[0].focus();

            // Thiết lập toggle hiện/ẩn mật khẩu
            togglePassword.addEventListener('click', function() {
                togglePasswordVisibility(password, this);
            });

            toggleConfirmPassword.addEventListener('click', function() {
                togglePasswordVisibility(confirmPassword, this);
            });

            function togglePasswordVisibility(inputField, icon) {
                if (inputField.type === 'password') {
                    inputField.type = 'text';
                    icon.classList.replace('bi-eye-fill', 'bi-eye-slash-fill');
                } else {
                    inputField.type = 'password';
                    icon.classList.replace('bi-eye-slash-fill', 'bi-eye-fill');
                }
            }

            // Lấy tất cả các trường required (bao gồm cả textarea)
            const requiredFields = form.querySelectorAll('[required]');

            // Thêm xử lý Enter key cho tất cả trường input
            formFields.forEach((field, index) => {
                field.addEventListener('keydown', function(event) {
                    if (event.key === 'Enter') {
                        event.preventDefault();

                        // Nếu là checkbox và đang nhấn Enter
                        if (field.type === 'checkbox') {
                            // Nếu checkbox chưa được chọn, hãy chọn nó
                            if (!field.checked) {
                                field.checked = true;
                                validateField(field);
                                validateForm();
                                return;
                            }
                            // Nếu checkbox đã được chọn và form hợp lệ, submit form
                            else if (!signUpBtn.disabled) {
                                form.submit();
                                return;
                            }
                            // Nếu checkbox đã được chọn nhưng form không hợp lệ, chuyển đến nút submit
                            else {
                                signUpBtn.focus();
                                return;
                            }
                        }

                        // Nếu là trường cuối cùng và form hợp lệ, thì submit form
                        if (index === formFields.length - 1) {
                            if (!signUpBtn.disabled) {
                                form.submit();
                            }
                            return;
                        }

                        // Di chuyển đến trường tiếp theo
                        formFields[index + 1].focus();
                    }
                });
            });

            // Kiểm tra real-time
            requiredFields.forEach(field => {
                if (field.type === 'radio') {
                    field.addEventListener('change', function() {
                        validateRadioGroup('Sex');
                        validateForm();
                    });
                } else {
                    field.addEventListener('input', function() {
                        validateField(field);
                        validateForm();
                    });
                }
            });

            // Kiểm tra checkbox
            agreeTerms.addEventListener('change', function() {
                validateField(agreeTerms);
                validateForm();
            });

            // Kiểm tra confirm password
            [password, confirmPassword].forEach(field => {
                field.addEventListener('input', validatePasswordMatch);
            });

            function validateField(field) {
                if (field.type === 'checkbox') {
                    const feedback = field.nextElementSibling.nextElementSibling;
                    if (!field.checked) {
                        field.classList.add('is-invalid');
                        field.classList.remove('is-valid');
                        feedback.style.display = 'block';
                    } else {
                        field.classList.remove('is-invalid');
                        field.classList.add('is-valid');
                        feedback.style.display = 'none';
                    }
                } else if (field.checkValidity()) {
                    field.classList.remove('is-invalid');
                    field.classList.add('is-valid');
                } else {
                    field.classList.remove('is-valid');
                    field.classList.add('is-invalid');
                }
            }

            function validateRadioGroup(name) {
                const radios = document.querySelectorAll(`input[name="${name}"]`);
                let isChecked = false;

                radios.forEach(radio => {
                    radio.classList.remove('is-valid', 'is-invalid');
                    if (radio.checked) {
                        radio.classList.add('is-valid');
                        isChecked = true;
                    }
                });

                return isChecked;
            }

            function validatePasswordMatch() {
                if (password.value !== confirmPassword.value) {
                    confirmPassword.setCustomValidity("Mật khẩu xác nhận không khớp");
                    confirmPassword.classList.add('is-invalid');
                    confirmPassword.classList.remove('is-valid');
                } else {
                    confirmPassword.setCustomValidity("");
                    if (confirmPassword.value) {
                        confirmPassword.classList.add('is-valid');
                        confirmPassword.classList.remove('is-invalid');
                    }
                }
                validateForm();
            }

            function validateForm() {
                let allValid = true;

                // Kiểm tra tất cả required fields
                requiredFields.forEach(field => {
                    if (field.type === 'radio') {
                        if (!validateRadioGroup('Sex')) {
                            allValid = false;
                        }
                    } else if (!field.checkValidity()) {
                        allValid = false;
                    }
                });

                // Kiểm tra checkbox
                if (!agreeTerms.checked) {
                    allValid = false;
                }

                // Kiểm tra password match
                if (password.value !== confirmPassword.value) {
                    allValid = false;
                }

                // Bật/tắt nút Sign Up
                if (allValid) {
                    signUpBtn.disabled = false;
                    signUpBtn.classList.remove('disabled');
                } else {
                    signUpBtn.disabled = true;
                    signUpBtn.classList.add('disabled');
                }
            }

            // Khởi tạo validation ban đầu
            validateForm();

            // Thêm Bootstrap validation styles khi submit
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    </script>
</body>
</html>