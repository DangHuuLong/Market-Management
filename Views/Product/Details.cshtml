@using PBL3_HK4.Entity
@{
    ViewData["Title"] = "Product Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ProductDetailsViewModel productDetailsViewModel = Model as ProductDetailsViewModel;
    Product product = productDetailsViewModel.Product;
    IEnumerable<Product> listProduct = productDetailsViewModel.ListProduct;
    IEnumerable<Customer> customers = productDetailsViewModel.Customer;
}

<div class="product-details py-5">
    <div class="row mx-auto" style="max-width: 1200px;">
        <!-- Main Product Section -->
        <div class="col-md-8">
            <div class="row mb-5">
                <!-- Product Image -->
                <div class="col-md-6">
                    @{
                        var mainImage = product.Images != null && product.Images.Any()
                        ? product.Images.FirstOrDefault()?.ImagePath ?? "/images/products/default.jpg"
                        : "/images/products/default.jpg";
                    }
                    <div class="main-image-wrapper">
                        <img class="img-fluid main-image" id="img-product" src="@mainImage" alt="@product.ProductName" />
                    </div>
                    <div class="d-flex justify-content-between mt-3 sub-images">
                        @{
                            var subImage1 = product.Images != null && product.Images.Count > 1
                            ? product.Images.ElementAtOrDefault(1)?.ImagePath ?? "/images/products/default.jpg"
                            : "/images/products/default.jpg";
                            var subImage2 = product.Images != null && product.Images.Count > 2
                            ? product.Images.ElementAtOrDefault(2)?.ImagePath ?? "/images/products/default.jpg"
                            : "/images/products/default.jpg";
                            var subImage3 = product.Images != null && product.Images.Count > 3
                            ? product.Images.ElementAtOrDefault(3)?.ImagePath ?? "/images/products/default.jpg"
                            : "/images/products/default.jpg";
                        }
                        <img class="sub-img" src="@subImage1" alt="@product.ProductName - Image 1" />
                        <img class="sub-img" src="@subImage2" alt="@product.ProductName - Image 2" />
                        <img class="sub-img" src="@subImage3" alt="@product.ProductName - Image 3" />
                    </div>
                </div>

                <!-- Product Details -->
                <div class="col-md-6 d-flex flex-column justify-content-between ps-4">
                    <div>
                        <div class="d-flex align-items-center mb-2">
                            <span class="star-rating me-2" style="letter-spacing: 5px;" data-rating="@product.AverageRating"></span>
                            <span class="text-muted">(@product.AverageRating/5)</span>
                        </div>
                        <h1 class="product-name">@product.ProductName</h1>
                        <div class="price mb-3">
                            <span class="current-price">@product.Price.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) ₫ / @product.Unit</span>
                        </div>
                        <div class="stock-status mb-3">
                            @if (product.StockQuantity > 10)
                            {
                                <span class="badge bg-success">In Stock</span>
                            }
                            else if (product.StockQuantity > 0)
                            {
                                <span class="badge bg-warning">Low Stock (@product.StockQuantity left)</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Out of Stock</span>
                            }
                        </div>
                    </div>
                    <div>
                        <hr class="my-3">
                        <p class="category">Category: <span class="text-success">@product.Catalog.CatalogName</span></p>
                        <p class="mfg-exp">MFG: @product.MFGDate.ToString("dd/MM/yyyy") | EXP: @product.EXPDate.ToString("dd/MM/yyyy")</p>
                        <hr class="my-3">
                    </div>
                    <div class="d-flex align-items-center mb-3">
                        <div class="quantity-selector me-3">
                            <i id="dash" class="bi bi-dash-circle"></i>
                            <span id="value">1</span>
                            <i id="plus" class="bi bi-plus-circle"></i>
                        </div>
                        <div class="w-100">
                            <a class="btn btn-primary add-to-cart w-100" id="add-to-cart-btn">
                                <i class="bi bi-cart-plus me-2"></i>Add to Cart
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabs: Description & Reviews -->
            <div class="tabs-section">
                <ul class="nav nav-tabs mb-4">
                    <li class="nav-item">
                        <a class="nav-link active" id="description-tab" href="#description-content" data-bs-toggle="tab">Description</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="reviews-tab" href="#reviews-content" data-bs-toggle="tab">Reviews</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="description-content">
                        <h3>@product.ProductName</h3>
                        <p class="text-muted">@product.ProductDescription</p>
                    </div>
                    <div class="tab-pane fade" id="reviews-content"></div>
                </div>
            </div>
        </div>

        <!-- Related Products -->
        <div class="col-md-4">
            <h4 class="mb-4">Related Products</h4>
            <div class="related-products">
                @foreach (Product productPropose in listProduct)
                {
                    var proposeImage = productPropose.Images != null && productPropose.Images.Any()
                    ? productPropose.Images.FirstOrDefault()?.ImagePath ?? "/images/products/default.jpg"
                    : "/images/products/default.jpg";
                    <div class="related-product-card mb-4">
                        <form action="@Url.Action("Details", "Product")" method="post">
                            <input type="hidden" name="id" value="@productPropose.ProductID">
                            <button type="submit" class="btn p-0 text-start w-100">
                                <div class="d-flex flex-column">
                                    <div class="related-product-img-wrapper">
                                        <img class="related-product-img" src="@proposeImage" alt="@productPropose.ProductName" />
                                    </div>
                                    <div class="mt-2">
                                        <p class="related-product-name">@productPropose.ProductName</p>
                                        <span class="star-rating small" data-rating="@productPropose.AverageRating"></span>
                                        <p class="related-product-price">@productPropose.Price.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) ₫ / @productPropose.Unit</p>
                                    </div>
                                </div>
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .product-details {
        padding: 30px 0;
    }

    .main-image-wrapper {
        border-radius: 12px;
        background-color: #EDEDED;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        aspect-ratio: 1/1;
        overflow: hidden;
    }

    .main-image {
        transition: transform 0.4s ease;
        object-fit: cover;
        width: 100%;
        height: 100%;
    }

        .main-image:hover {
            transform: scale(1.08);
        }

    .sub-images {
        gap: 15px;
    }

    .sub-img {
        width: 30%;
        border-radius: 8px;
        background-color: #EDEDED;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

        .sub-img:hover {
            transform: scale(1.1);
            border-color: #80B500;
        }

        .sub-img.active {
            border-color: #80B500;
            transform: scale(1.05);
        }

    .product-name {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2d3e40;
    }

    .price {
        gap: 10px;
    }

    .current-price {
        font-size: 2.2rem;
        font-weight: 700;
        color: #6D7B30;
    }

    .stock-status .badge {
        font-size: 0.9rem;
        padding: 8px 12px;
        border-radius: 20px;
    }

    .category, .mfg-exp {
        font-size: 1.1rem;
        color: #6c757d;
    }

        .category .text-success {
            color: #80B500 !important;
            font-weight: 500;
        }

    .quantity-selector {
        display: flex;
        flex-direction: row;
        align-items: center;
        border: 1px solid #80B500;
        border-radius: 20px;
        padding: 8px 15px;
        background-color: #E6E9E1;
    }

        .quantity-selector i {
            cursor: pointer;
            font-size: 1.4rem;
            color: #80B500;
            transition: color 0.2s;
        }

            .quantity-selector i:hover {
                color: #6A9300;
            }

        .quantity-selector span {
            margin: 0 15px;
            font-size: 1.3rem;
            font-weight: 600;
            color: #2d3e40;
        }

    .add-to-cart {
        font-size: 1.2rem;
        padding: 12px 20px;
        border-radius: 20px;
        background-color: #80B500;
        border: none;
        color: white;
        transition: all 0.3s ease;
    }

        .add-to-cart:hover {
            background-color: #6A9300;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

    .nav-tabs {
        border-bottom: 2px solid #E6E9E1;
    }

        .nav-tabs .nav-link {
            font-size: 1.2rem;
            font-weight: 500;
            color: #6c757d;
            padding: 12px 25px;
            border: none;
            border-bottom: 3px solid transparent;
            transition: all 0.3s ease;
        }

            .nav-tabs .nav-link.active {
                color: #80B500;
                border-bottom: 3px solid #80B500;
                background-color: #E6E9E1;
            }

            .nav-tabs .nav-link:hover {
                color: #80B500;
                background-color: #F5F7F3;
            }

    .tab-content {
        padding: 25px;
        background-color: #F5F7F3;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

        .tab-content h3 {
            font-size: 1.8rem;
            font-weight: 600;
            color: #2d3e40;
        }

    .review-item {
        padding: 15px;
        border-radius: 10px;
        background-color: #FFFFFF;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease;
    }

        .review-item:hover {
            transform: translateY(-3px);
        }

        .review-item img {
            transition: transform 0.3s ease;
        }

            .review-item img:hover {
                transform: scale(1.1);
            }

        .review-item h6 {
            font-size: 1.1rem;
            color: #2d3e40;
        }

        .review-item small {
            font-size: 0.9rem;
        }

        .review-item p {
            font-size: 0.95rem;
            color: #333;
        }

    .related-products {
        gap: 15px;
    }

    .related-product-card {
        border: none;
        border-radius: 12px;
        padding: 12px;
        background-color: #FFFFFF;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        max-width: 200px;
    }

        .related-product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

    .related-product-img-wrapper {
        width: 100%;
        height: 140px;
        border-radius: 8px;
        overflow: hidden;
        background-color: #EDEDED;
    }

    .related-product-img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.3s ease;
    }

    .related-product-card:hover .related-product-img {
        transform: scale(1.1);
    }

    .related-product-name {
        font-size: 1rem;
        font-weight: 600;
        color: #2d3e40;
        margin-bottom: 5px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .related-product-price {
        font-size: 1rem;
        font-weight: 600;
        color: #6D7B30;
        margin-top: 5px;
    }

    .star-rating.small {
        font-size: 0.85rem;
        letter-spacing: 2px;
    }

    .product-fly {
        position: fixed;
        z-index: 9999;
        transform: translate(-50%, -50%);
        transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        pointer-events: none;
    }

    @@media (max-width: 991.98px) {
        .product-details

    {
        padding: 20px 0;
    }

    .col-md-8 {
        margin-bottom: 30px;
    }

    .product-name {
        font-size: 2rem;
    }

    .current-price {
        font-size: 1.8rem;
    }

    .main-image-wrapper {
        aspect-ratio: 4/3;
    }

    .sub-img {
        width: 31%;
    }

    .quantity-selector {
        padding: 6px 12px;
    }

    .add-to-cart {
        font-size: 1rem;
        padding: 10px 15px;
    }

    .related-product-img-wrapper {
        height: 120px;
    }

    .related-product-name, .related-product-price {
        font-size: 0.95rem;
    }

    }

    @@media (max-width: 767.98px) {
        .col-md-6

    {
        margin-bottom: 20px;
    }

    .product-name {
        font-size: 1.8rem;
    }

    .current-price {
        font-size: 1.6rem;
    }

    .quantity-selector span {
        margin: 0 10px;
        font-size: 1.1rem;
    }

    .nav-tabs .nav-link {
        font-size: 1rem;
        padding: 10px 15px;
    }

    .tab-content {
        padding: 15px;
    }

    .review-item img {
        width: 40px;
        height: 40px;
    }

    .related-product-card {
        padding: 10px;
        max-width: 180px;
    }

    .related-product-img-wrapper {
        height: 100px;
    }

    }

    @@media (max-width: 575.98px) {
        .product-name

    {
        font-size: 1.5rem;
    }

    .current-price {
        font-size: 1.4rem;
    }

    .quantity-selector {
        padding: 5px 10px;
    }

        .quantity-selector i {
            font-size: 1.2rem;
        }

    .add-to-cart {
        font-size: 0.9rem;
        padding: 8px 12px;
    }

    .nav-tabs .nav-link {
        font-size: 0.9rem;
        padding: 8px 12px;
    }

    .tab-content h3 {
        font-size: 1.4rem;
    }

    .related-product-img-wrapper {
        height: 80px;
    }

    .related-product-name, .related-product-price {
        font-size: 0.9rem;
    }

    .related-product-card {
        max-width: 160px;
    }

    }
</style>

@section Scripts {
    <script>
        window.onload = function () {
            let mainImg = document.getElementById("img-product");
            let subImages = document.querySelectorAll(".sub-img");

            function resizeImages() {
                let height = mainImg.clientHeight;
                let newHeight = (height / 3) - 15;
                subImages.forEach(img => {
                    img.style.height = newHeight + "px";
                    img.style.objectFit = "cover";
                });
            }

            mainImg.onload = resizeImages;
            if (mainImg.complete) resizeImages();

            subImages.forEach(img => {
                img.addEventListener('click', function () {
                    subImages.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                    mainImg.src = this.src;
                });
            });

            if (subImages.length > 0) subImages[0].classList.add('active');
        };
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const reviewsContainer = document.getElementById("reviews-content");
                const reviews = [
                @foreach (var review in product.Reviews)
                {
                    var customer = customers.FirstOrDefault(c => c.UserID == review.UserID);
                    if (customer != null)
                    {
                        <text>
                                    {
                                        name: "@customer.Name",
                                        date: "@review.CreateAt.ToString("dd/MM/yyyy")",
                                        rating: @review.Rating,
                                        comment: "@review.Text"
                                    },
                        </text>
                    }
                }
                ];

            if (reviews.length === 0) {
                reviewsContainer.innerHTML = `
                    <div class="text-center py-4">
                        <p class="text-muted">No reviews yet. Be the first to share your thoughts!</p>
                    </div>
                `;
            } else {
                reviews.forEach(review => {
                    let starsHtml = '';
                    for (let i = 0; i < 5; i++) {
                        starsHtml += i < review.rating
                            ? '<span style="color: #FFD700;">★</span>'
                            : '<span style="color: #C0C0C0;">☆</span>';
                    }
                    reviewsContainer.innerHTML += `
                        <div class="review-item mb-4">
                            <div class="d-flex align-items-center">
                                <img src="../img/avatar.jpg" class="rounded-circle me-3" style="width: 50px; height: 50px;">
                                <div class="w-100">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">${review.name}</h6>
                                        <small class="text-muted">${review.date}</small>
                                    </div>
                                    <span class="text-warning">${starsHtml}</span>
                                    <p class="mt-1">${review.comment}</p>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }

            const dash = document.getElementById('dash');
            const plus = document.getElementById('plus');
            const value = document.getElementById('value');
            const maxStock = @product.StockQuantity;

            dash.addEventListener('click', () => {
                let currentValue = parseInt(value.textContent);
                if (currentValue > 1) value.textContent = currentValue - 1;
            });

            plus.addEventListener('click', () => {
                let currentValue = parseInt(value.textContent);
                if (currentValue < maxStock) value.textContent = currentValue + 1;
                else alert('Maximum stock quantity reached!');
            });

            document.getElementById('add-to-cart-btn').addEventListener('click', function (e) {
                e.preventDefault();
                const productImg = document.getElementById('img-product');
                const cartIcon = document.getElementById('cart-icon') || document.getElementById('tablet-cart-icon') || document.getElementById('mobile-cart-icon');
                const quantity = parseInt(document.getElementById('value').textContent);
                const productId = '@product.ProductID';

                if (!cartIcon) {
                    alert('Cart icon not found. Please check the layout.');
                    return;
                }

                const productRect = productImg.getBoundingClientRect();
                const cartRect = cartIcon.getBoundingClientRect();

                const flyingImg = new Image();
                flyingImg.src = productImg.src;
                flyingImg.classList.add('product-fly');
                flyingImg.style.left = `${productRect.left + window.scrollX + (productRect.width / 2)}px`;
                flyingImg.style.top = `${productRect.top + window.scrollY + (productRect.height / 2)}px`;
                flyingImg.style.width = `${productRect.width * 0.3}px`;
                flyingImg.style.opacity = '1';
                document.body.appendChild(flyingImg);

                requestAnimationFrame(() => {
                    flyingImg.style.left = `${cartRect.left + window.scrollX + (cartRect.width / 2)}px`;
                    flyingImg.style.top = `${cartRect.top + window.scrollY + (cartRect.height / 2)}px`;
                    flyingImg.style.transform = 'translate(-50%, -50%) scale(0.3)';
                    flyingImg.style.opacity = '0';
                });

                fetch(`/Cart/AddToCart?productId=${productId}&quantity=${quantity}`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        flyingImg.addEventListener('transitionend', () => {
                            flyingImg.remove();
                            document.getElementById('cart-count').textContent = data.cartItemCount;
                            if (document.getElementById('tablet-cart-count')) document.getElementById('tablet-cart-count').textContent = data.cartItemCount;
                            if (document.getElementById('mobile-cart-count')) document.getElementById('mobile-cart-count').textContent = data.cartItemCount;
                            document.getElementById('value').textContent = '1';
                            cartIcon.style.transform = 'scale(1.2)';
                            setTimeout(() => cartIcon.style.transform = '', 300);
                        }, { once: true });
                    } else {
                        flyingImg.remove();
                        alert(data.message || 'Không thể thêm vào giỏ hàng');
                    }
                })
                .catch(error => {
                    flyingImg.remove();
                    alert('Đã xảy ra lỗi khi thêm vào giỏ hàng');
                });
            });
        });

        document.querySelectorAll('.star-rating').forEach(span => {
            let starsHtml = '';
            const rating = Math.max(0, Math.min(5, parseFloat(span.getAttribute('data-rating') || 0)));
            for (let i = 0; i < 5; i++) {
                starsHtml += i < rating ? '<span style="color: #FFD700;">★</span>' : '<span style="color: #C0C0C0;">☆</span>';
            }
            span.innerHTML = starsHtml;
        });
    </script>
}