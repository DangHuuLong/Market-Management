@using PBL3_HK4.Entity
@model object
@{
    ViewData["Title"] = "Discount Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    IEnumerable<Discount> listDiscount = Model as IEnumerable<Discount>;
}

<div id="discount-content" class="content-section active">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3 gap-2">
        <h1 class="fs-2 fs-md-1 mb-2 mb-md-0">Discount Management</h1>
        <button style="background-color: #2E8B57; color: white;" class="btn" id="add-discount-btn">
            <i class="fas fa-plus"></i> <span class="d-none d-sm-inline">Add New Discount</span>
        </button>
    </div>

    <!-- Bảng dữ liệu -->
    <div class="table-responsive">
        <table class="table table-striped table-hover" id="discount-table">
            <thead class="table-light">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Rate (%)</th>
                    <th class="d-none d-md-table-cell">Start Date</th>
                    <th class="d-none d-md-table-cell">End Date</th>
                    <th width="20%">Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Dữ liệu sẽ được thêm bằng JavaScript -->
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center flex-wrap">
            <!-- Phân trang sẽ được thêm bằng JavaScript -->
        </ul>
    </nav>
</div>

<style>
    .pagination {
        margin-top: 20px;
    }

    .page-item.active .page-link {
        background-color: #2E8B57;
        border-color: #2E8B57;
    }

    .page-link {
        color: #2E8B57;
    }

        .page-link:hover {
            color: #1e7d45;
        }

    .form-label {
        font-weight: 500;
        color: #2E8B57;
    }

    .modal-overlay {
        animation: fadeIn 0.3s ease-in-out;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    }

    .modal-content {
        animation: slideDown 0.3s ease-in-out;
    }

    @@keyframes slideDown {
        from

    {
        transform: translateY(-50px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    .modal-footer .btn {
        padding: 6px 12px;
        border-radius: 4px;
        transition: all 0.3s;
    }

        .modal-footer .btn:hover {
            opacity: 0.9;
        }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 15px;
    }

    .form-group {
        flex: 1;
        min-width: 250px;
    }

        .form-group label {
            margin-bottom: 5px;
            display: block;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
        }

    /* Responsive styles - Only for tablet and mobile */
    @@media (max-width: 991.98px) {
        #discount-table th, #discount-table td

    {
        padding: 0.5rem;
    }

    .form-row {
        gap: 10px;
        margin-bottom: 10px;
    }

    .form-group {
        min-width: 200px;
    }

    }

    @@media (max-width: 767.98px) {
        h1

    {
        font-size: 1.75rem;
    }

    #discount-table th:first-child,
    #discount-table td:first-child {
        width: 15% !important;
    }

    .modal-content {
        width: 95% !important;
        padding: 15px !important;
        max-height: 90vh !important;
        overflow-y: auto !important;
    }

    .form-row {
        flex-direction: column;
        gap: 8px;
    }

    .form-group {
        min-width: 100%;
    }

    /* Pagination for mobile */
    .pagination .page-link {
        padding: 0.375rem 0.5rem;
    }

    .pagination .page-item:not(.active):not(:first-child):not(:last-child) {
        display: none;
    }

    .pagination .page-item.active {
        display: block;
    }

    }

    @@media (max-width: 575.98px) {
        .modal-content

    {
        padding: 10px !important;
    }

    .modal-header h3 {
        font-size: 1.5rem;
    }

    .modal-footer {
        flex-direction: column;
        width: 100%;
    }

        .modal-footer .btn {
            width: 100%;
            margin-bottom: 5px;
        }

    }
</style>

<script>
    // Chuyển dữ liệu từ Model thành JavaScript
    const discounts = [
    @foreach (var item in listDiscount)
    {
        @:{
        @:  id: "@item.DiscountID",
        @:  name: "@item.Name",
        @:  rate: @(item.DiscountRate ?? 0),
        @:  startDate: "@item.StartDate.ToString("yyyy-MM-dd")",
        @:  endDate: "@item.EndDate.ToString("yyyy-MM-dd")",
        @:  describe: "@item.Describe",
        @:  applicableProduct: "@item.ApplicableProduct",
        @:  requirement: "@item.Requirement"
        @:},
    }
    ];

    // Pagination variables
    let currentPage = 1;
    let itemsPerPage = 10;

    // Adjust items per page based on screen size
    function adjustItemsPerPage() {
        if (window.innerWidth <= 576) {
            itemsPerPage = 5;
        } else if (window.innerWidth <= 992) {
            itemsPerPage = 8;
        } else {
            itemsPerPage = 10;
        }
        renderDiscountTable(discounts, currentPage);
    }

    // Format date for display
    function formatDate(dateString) {
        const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
        return new Date(dateString).toLocaleDateString('vi-VN', options);
    }

    // Render table data
    function renderDiscountTable(data, page = 1) {
        const tbody = document.querySelector('#discount-table tbody');
        const pagination = document.querySelector('.pagination');
        tbody.innerHTML = '';

        const totalPages = Math.ceil(data.length / itemsPerPage);
        const startIndex = (page - 1) * itemsPerPage;
        const endIndex = Math.min(startIndex + itemsPerPage, data.length);
        const paginatedData = data.slice(startIndex, endIndex);

        // Check if current page is valid after items per page change
        if (page > totalPages && totalPages > 0) {
            currentPage = totalPages;
            renderDiscountTable(data, totalPages);
            return;
        }

        paginatedData.forEach(discount => {
            const row = document.createElement('tr');

            // Check if mobile view
            const isMobile = window.innerWidth <= 767.98;
            if (isMobile) {
                row.innerHTML = `
                    <td>${discount.id}</td>
                    <td>
                        ${discount.name}
                        <small class="d-block d-md-none text-muted">
                            ${formatDate(discount.startDate)} - ${formatDate(discount.endDate)}
                        </small>
                    </td>
                    <td>${discount.rate}%</td>
                    <td>
                        <button class="btn btn-sm btn-link text-dark me-2" onclick="viewDiscount('${discount.id}')">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn btn-sm btn-link text-danger" onclick="deleteDiscount('${discount.id}')">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                `;
            } else {
                row.innerHTML = `
                    <td>${discount.id}</td>
                    <td>${discount.name}</td>
                    <td>${discount.rate}%</td>
                    <td class="d-none d-md-table-cell">${discount.startDate}</td>
                    <td class="d-none d-md-table-cell">${discount.endDate}</td>
                    <td>
                        <button class="btn btn-sm btn-link text-dark me-2" onclick="viewDiscount('${discount.id}')">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn btn-sm btn-link text-danger" onclick="deleteDiscount('${discount.id}')">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                `;
            }
            tbody.appendChild(row);
        });

        if (data.length > itemsPerPage) {
            renderPagination(totalPages, page);
            pagination.style.display = 'flex';
        } else {
            pagination.style.display = 'none';
        }
    }

    // Render pagination
    function renderPagination(totalPages, currentPage) {
        const pagination = document.querySelector('.pagination');
        pagination.innerHTML = '';

        const prevLi = document.createElement('li');
        prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
        prevLi.innerHTML = `<a class="page-link" href="#" onclick="event.preventDefault(); changePage(${currentPage - 1})">«</a>`;
        pagination.appendChild(prevLi);

        // Determine visible pages based on screen size
        let maxVisiblePages = 5; // Desktop default
        const isMobile = window.innerWidth <= 767.98;
        const isTablet = window.innerWidth <= 991.98 && window.innerWidth > 767.98;

        if (isMobile) {
            maxVisiblePages = 1;
        } else if (isTablet) {
            maxVisiblePages = 3;
        }

        const startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
        const endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

        // First page (if not in range)
        if (startPage > 1) {
            const firstPageLi = document.createElement('li');
            firstPageLi.className = 'page-item';
            firstPageLi.innerHTML = `<a class="page-link" href="#" onclick="event.preventDefault(); changePage(1)">1</a>`;
            pagination.appendChild(firstPageLi);

            // Ellipsis if needed
            if (startPage > 2) {
                const ellipsisLi = document.createElement('li');
                ellipsisLi.className = 'page-item disabled d-none d-md-block';
                ellipsisLi.innerHTML = `<span class="page-link">...</span>`;
                pagination.appendChild(ellipsisLi);
            }
        }

        // Page numbers
        for (let i = startPage; i <= endPage; i++) {
            const pageLi = document.createElement('li');
            pageLi.className = `page-item ${i === currentPage ? 'active' : ''}`;
            pageLi.innerHTML = `<a class="page-link" href="#" onclick="event.preventDefault(); changePage(${i})">${i}</a>`;
            pagination.appendChild(pageLi);
        }

        // Last page (if not in range)
        if (endPage < totalPages) {
            // Ellipsis if needed
            if (endPage < totalPages - 1) {
                const ellipsisLi = document.createElement('li');
                ellipsisLi.className = 'page-item disabled d-none d-md-block';
                ellipsisLi.innerHTML = `<span class="page-link">...</span>`;
                pagination.appendChild(ellipsisLi);
            }

            const lastPageLi = document.createElement('li');
            lastPageLi.className = 'page-item';
            lastPageLi.innerHTML = `<a class="page-link" href="#" onclick="event.preventDefault(); changePage(${totalPages})">${totalPages}</a>`;
            pagination.appendChild(lastPageLi);
        }

        // Next button
        const nextLi = document.createElement('li');
        nextLi.className = `page-item ${currentPage === totalPages ? 'disabled' : ''}`;
        nextLi.innerHTML = `<a class="page-link" href="#" onclick="event.preventDefault(); changePage(${currentPage + 1})">»</a>`;
        pagination.appendChild(nextLi);
    }

    // Change page
    function changePage(page) {
        if (page < 1 || page > Math.ceil(discounts.length / itemsPerPage)) return;
        currentPage = page;
        renderDiscountTable(discounts, page);
    }

    // View/Edit discount
    function viewDiscount(id) {
        const discount = discounts.find(d => d.id === id);
        if (!discount) return;

        // Check if mobile device
        const isMobile = window.innerWidth <= 767.98;

        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1050; display: flex; justify-content: center; align-items: center;';

        const modalContent = document.createElement('div');
        modalContent.className = 'modal-content';

        if (isMobile) {
            modalContent.style.cssText = 'background-color: white; padding: 15px; border-radius: 8px; width: 95%; max-width: 95%; max-height: 90vh; overflow-y: auto;';
        } else {
            modalContent.style.cssText = 'background-color: white; padding: 25px; border-radius: 8px; width: 600px; max-width: 90%;';
        }

        modalContent.innerHTML = `
            <div class="modal-header" style="border-bottom: 1px solid #dee2e6; margin-bottom: 20px; padding-bottom: 10px;">
                <h3 class="modal-title" style="color: #2E8B57; ${isMobile ? 'font-size: 1.5rem;' : ''}">Discount Details</h3>
            </div>
            <form id="editDiscountForm" action="UpdateDiscount" method="post">
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">ID</label>
                            <input type="text" class="form-control" id="discount-id" name="id" value="${discount.id}" readonly style="background-color: #f8f9fa; cursor: not-allowed;">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" id="discount-name" name="name" value="${discount.name || ''}" disabled>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Rate (%)</label>
                            <input type="number" class="form-control" id="discount-rate" name="discountRate" value="${discount.rate}" min="0" max="100" disabled>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Start Date</label>
                            <input type="date" class="form-control" id="discount-start" name="startDate" value="${discount.startDate}" disabled>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">End Date</label>
                            <input type="date" class="form-control" id="discount-end" name="endDate" value="${discount.endDate}" disabled>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" id="discount-describe" name="describe" rows="2" disabled>${discount.describe || ''}</textarea>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Applicable Products</label>
                            <input type="text" class="form-control" id="discount-products" name="applicableProduct" value="${discount.applicableProduct || ''}" disabled>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Requirements</label>
                            <textarea class="form-control" id="discount-requirement" name="requirement" rows="2" disabled>${discount.requirement || ''}</textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="display: flex; gap: 10px; ${isMobile ? 'flex-direction: column; width: 100%;' : ''}">
                    <button type="button" class="btn btn-edit" style="background-color: #2E8B57; color: white; ${isMobile ? 'width: 100%;' : ''}">
                        <i class="fas fa-edit me-2"></i>Edit
                    </button>
                    <button type="submit" class="btn btn-save" style="background-color: #28a745; color: white; display: none; ${isMobile ? 'width: 100%;' : ''}">
                        <i class="fas fa-save me-2"></i>Save
                    </button>
                    <button type="button" class="btn btn-cancel" style="background-color: #6c757d; color: white; display: none; ${isMobile ? 'width: 100%;' : ''}">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-close-modal" style="background-color: #6c757d; color: white; ${isMobile ? 'width: 100%;' : ''}">
                        Close
                    </button>
                </div>
            </form>
        `;

        const form = modalContent.querySelector('#editDiscountForm');
        const inputs = {
            id: modalContent.querySelector('#discount-id'),
            name: modalContent.querySelector('#discount-name'),
            rate: modalContent.querySelector('#discount-rate'),
            start: modalContent.querySelector('#discount-start'),
            end: modalContent.querySelector('#discount-end'),
            describe: modalContent.querySelector('#discount-describe'),
            products: modalContent.querySelector('#discount-products'),
            requirement: modalContent.querySelector('#discount-requirement')
        };

        const buttons = {
            edit: modalContent.querySelector('.btn-edit'),
            save: modalContent.querySelector('.btn-save'),
            cancel: modalContent.querySelector('.btn-cancel'),
            close: modalContent.querySelector('.btn-close-modal')
        };

        const enterEditMode = () => {
            inputs.name.disabled = false;
            inputs.rate.disabled = false;
            inputs.start.disabled = false;
            inputs.end.disabled = false;
            inputs.describe.disabled = false;
            inputs.products.disabled = false;
            inputs.requirement.disabled = false;
            buttons.edit.style.display = 'none';
            buttons.save.style.display = 'block';
            buttons.cancel.style.display = 'block';
            buttons.close.style.display = 'none';
        };

        const exitEditMode = () => {
            inputs.name.disabled = true;
            inputs.rate.disabled = true;
            inputs.start.disabled = true;
            inputs.end.disabled = true;
            inputs.describe.disabled = true;
            inputs.products.disabled = true;
            inputs.requirement.disabled = true;
            inputs.name.value = discount.name || '';
            inputs.rate.value = discount.rate;
            inputs.start.value = discount.startDate;
            inputs.end.value = discount.endDate;
            inputs.describe.value = discount.describe || '';
            inputs.products.value = discount.applicableProduct || '';
            inputs.requirement.value = discount.requirement || '';
            buttons.edit.style.display = 'block';
            buttons.save.style.display = 'none';
            buttons.cancel.style.display = 'none';
            buttons.close.style.display = 'block';
        };

        buttons.close.addEventListener('click', () => document.body.removeChild(modal));
        buttons.edit.addEventListener('click', enterEditMode);
        buttons.cancel.addEventListener('click', exitEditMode);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                if (!inputs.name.disabled) exitEditMode();
                else document.body.removeChild(modal);
            }
        });

        modal.appendChild(modalContent);
        document.body.appendChild(modal);
    }

    // Delete discount
    function deleteDiscount(id) {
        const discount = discounts.find(d => d.id === id);
        if (!discount) return;

        // Check if mobile device
        const isMobile = window.innerWidth <= 767.98;

        const confirmModal = document.createElement('div');
        confirmModal.className = 'modal-overlay';
        confirmModal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1050; display: flex; justify-content: center; align-items: center;';

        if (isMobile) {
            confirmModal.innerHTML = `
                <div class="modal-content" style="background-color: white; padding: 15px; border-radius: 8px; width: 95%; max-width: 95%;">
                    <div class="modal-header" style="border-bottom: 1px solid #dee2e6; margin-bottom: 15px; padding-bottom: 10px;">
                        <h3 class="modal-title" style="color: #2E8B57; font-size: 1.5rem;">Confirm Deletion</h3>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this discount?</p>
                        <p><strong>Name:</strong> ${discount.name || ''}</p>

                        <form id="deleteDiscountForm" action="DeleteDiscount" method="post">
                            <input type="hidden" name="id" value="${discount.id}">
                        </form>
                    </div>
                    <div class="modal-footer" style="border-top: 1px solid #dee2e6; margin-top: 15px; padding-top: 10px; display: flex; flex-direction: column; width: 100%; gap: 5px;">
                        <button type="button" class="btn btn-cancel" style="background-color: #6c757d; color: white; width: 100%;">Cancel</button>
                        <button type="button" class="btn btn-confirm" style="background-color: #dc3545; color: white; width: 100%;">Delete</button>
                    </div>
                </div>
            `;
        } else {
            confirmModal.innerHTML = `
                <div class="modal-content" style="background-color: white; padding: 25px; border-radius: 8px; width: 400px; max-width:90%;">
                    <div class="modal-header">
                        <h3 class="modal-title" style="color: #2E8B57;">Confirm Deletion</h3>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this discount?</p>
                        <p><strong>Name:</strong> ${discount.name || ''}</p>

                        <form id="deleteDiscountForm" action="DeleteDiscount" method="post">
                            <input type="hidden" name="id" value="${discount.id}">
                        </form>
                    </div>
                    <div class="modal-footer" style="display: flex; gap: 10px;">
                        <button type="button" class="btn btn-cancel" style="background-color: #6c757d; color: white;">Cancel</button>
                        <button type="button" class="btn btn-confirm" style="background-color: #dc3545; color: white;">Delete</button>
                    </div>
                </div>
            `;
        }

        const deleteForm = confirmModal.querySelector('#deleteDiscountForm');
        const cancelBtn = confirmModal.querySelector('.btn-cancel');
        const confirmBtn = confirmModal.querySelector('.btn-confirm');

        cancelBtn.addEventListener('click', () => document.body.removeChild(confirmModal));
        confirmBtn.addEventListener('click', () => {
            // Submit form
            deleteForm.submit();

            // Update UI
            const index = discounts.findIndex(d => d.id === id);
            if (index !== -1) {
                discounts.splice(index, 1);
                renderDiscountTable(discounts, currentPage);
            }
            document.body.removeChild(confirmModal);
        });

        confirmModal.addEventListener('click', (e) => {
            if (e.target === confirmModal) document.body.removeChild(confirmModal);
        });

        document.body.appendChild(confirmModal);
    }

    // Add new discount
    function addNewDiscount() {
        // Check if mobile device
        const isMobile = window.innerWidth <= 767.98;

        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1050; display: flex; justify-content: center; align-items: center;';

        const modalContent = document.createElement('div');
        modalContent.className = 'modal-content';

        if (isMobile) {
            modalContent.style.cssText = 'background-color: white; padding: 15px; border-radius: 8px; width: 95%; max-width: 95%; max-height: 90vh; overflow-y: auto;';
        } else {
            modalContent.style.cssText = 'background-color: white; padding: 25px; border-radius: 8px; width: 600px; max-width: 90%;';
        }

        modalContent.innerHTML = `
            <div class="modal-header">
                <h3 class="modal-title" style="color: #2E8B57; ${isMobile ? 'font-size: 1.5rem;' : ''}">Add New Discount</h3>
            </div>
            <form id="addDiscountForm" action="CreateDiscount" method="post">
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Name <span style="color: red;">*</span></label>
                            <input type="text" class="form-control" id="new-discount-name" name="name" placeholder="Enter discount name" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Rate (%) <span style="color: red;">*</span></label>
                            <input type="number" class="form-control" id="new-discount-rate" name="discountRate" placeholder="Enter rate" min="0" max="100" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Start Date <span style="color: red;">*</span></label>
                            <input type="date" class="form-control" id="new-discount-start" name="startDate" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">End Date <span style="color: red;">*</span></label>
                            <input type="date" class="form-control" id="new-discount-end" name="endDate" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" id="new-discount-describe" name="describe" rows="2"></textarea>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Applicable Products</label>
                            <input type="text" class="form-control" id="new-discount-products" name="applicableProduct" placeholder="Enter applicable products">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">Requirements</label>
                            <textarea class="form-control" id="new-discount-requirement" name="requirement" rows="2"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="display: flex; gap: 10px; ${isMobile ? 'flex-direction: column; width: 100%;' : ''}">
                    <button type="submit" class="btn btn-add" style="background-color: #2E8B57; color: white; ${isMobile ? 'width: 100%;' : ''}">
                        <i class="fas fa-plus me-2"></i>Add
                    </button>
                    <button type="button" class="btn btn-cancel" style="background-color: #6c757d; color: white; ${isMobile ? 'width: 100%;' : ''}">
                        Cancel
                    </button>
                </div>
            </form>
        `;

        modalContent.querySelector('.btn-cancel').addEventListener('click', () => document.body.removeChild(modal));
        modal.addEventListener('click', (e) => {
            if (e.target === modal) document.body.removeChild(modal);
        });

        modal.appendChild(modalContent);
        document.body.appendChild(modal);
    }

    // Initialize
    document.addEventListener('DOMContentLoaded', () => {
        adjustItemsPerPage();
        renderDiscountTable(discounts);
        document.getElementById('add-discount-btn').addEventListener('click', addNewDiscount);

        // Listen for window resize
        window.addEventListener('resize', function() {
            adjustItemsPerPage();
            renderDiscountTable(discounts, currentPage);
        });
    });
</script>